name: docker multi-stage build

on:
  push:
    branches: [ main ] # 해당 branch에 push 되었을 경우

  # https://github.com/marketplace/actions/build-and-push-docker-images

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: alsqja2626
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: true
          tags: alsqja2626/pan-ttegi:latest
  # Ec2 에 배포
  deploy-to-ec2:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    # https://github.com/marketplace/actions/ssh-remote-commands
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" > /home/ubuntu/.env
            sudo echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> /home/ubuntu/.env
            sudo echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> /home/ubuntu/.env
            sudo echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> /home/ubuntu/.env
            sudo echo "DATABASE_PORT=3306" >> /home/ubuntu/.env
            sudo echo "DATABASE_NAME=pan-ttegi" >> /home/ubuntu/.env
            sudo echo "DATABASE_USERNAME=admin" >> /home/ubuntu/.env
            sudo chmod 644 /home/ubuntu/.env
            cd /home/ubuntu
            wget -O docker-compose.yml https://raw.githubusercontent.com/alsqja/pan-ttegi/test/cd/docker-compose.yml
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d
